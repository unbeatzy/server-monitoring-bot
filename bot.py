import os
import time
from telegram import Bot, Update, ReplyKeyboardMarkup
from telegram.ext import CommandHandler, Updater

# –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç BotFather
TOKEN = '–í–ê–®_–¢–û–ö–ï–ù'
CHAT_ID = '–í–ê–®_CHAT_ID'  # ID —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)

# IP –∏–ª–∏ –¥–æ–º–µ–Ω—ã –≤–∞—à–∏—Ö VPS —Å–µ—Ä–≤–µ—Ä–æ–≤
SERVERS = {
    'SWE': '1.2.3.4',  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ IP –∏–ª–∏ –¥–æ–º–µ–Ω—ã —Å–µ—Ä–≤–µ—Ä–æ–≤
    'NYC': '5.6.7.8',
    'LON': '9.10.11.12',
    'FRA': '13.14.15.16'
}

# –°—Ç–∞—Ç—É—Å—ã —Å–µ—Ä–≤–µ—Ä–æ–≤ (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤—Å–µ —Å—á–∏—Ç–∞–µ–º –æ–Ω–ª–∞–π–Ω)
server_statuses = {name: True for name in SERVERS}

def check_server_status():
    global server_statuses
    for name, ip in SERVERS.items():
        response = os.system(f"ping -c 1 {ip}")
        if response == 0:  # –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω
            if not server_statuses[name]:  # –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –±—ã–ª –æ—Ñ—Ñ–ª–∞–π–Ω, —Ç–µ–ø–µ—Ä—å –æ–Ω –æ–Ω–ª–∞–π–Ω
                bot.send_message(chat_id=CHAT_ID, text=f"üü¢ {name} - —Å–µ—Ä–≤–µ—Ä –æ–Ω–ª–∞–π–Ω")
                server_statuses[name] = True
        else:  # –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            if server_statuses[name]:  # –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –±—ã–ª –æ–Ω–ª–∞–π–Ω, —Ç–µ–ø–µ—Ä—å –æ–Ω –æ—Ñ—Ñ–ª–∞–π–Ω
                bot.send_message(chat_id=CHAT_ID, text=f"üî¥ {name} - —Å–µ—Ä–≤–µ—Ä –æ—Ñ—Ñ–ª–∞–π–Ω")
                server_statuses[name] = False

def get_all_servers_status():
    statuses = []
    for name, ip in SERVERS.items():
        response = os.system(f"ping -c 1 {ip}")
        if response == 0:  # –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω
            statuses.append(f"üü¢ {name}")
        else:  # –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            statuses.append(f"üî¥ {name}")
    return "\n".join(statuses)

def status_command(update: Update, context):
    status_report = get_all_servers_status()
    update.message.reply_text(status_report)

def start_command(update: Update, context):
    # –°–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–æ–≤"
    keyboard = [[
        "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–æ–≤"  # –ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º
    ]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    update.message.reply_text("–¢–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç", reply_markup=reply_markup)

if __name__ == '__main__':
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è Telegram
    updater = Updater(TOKEN, use_context=True)
    dispatcher = updater.dispatcher

    # –ö–æ–º–∞–Ω–¥–∞ /start
    dispatcher.add_handler(CommandHandler('start', start_command))

    # –ö–æ–º–∞–Ω–¥–∞ /status
    dispatcher.add_handler(CommandHandler('status', status_command))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    updater.start_polling()

    # –¶–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤
    while True:
        check_server_status()
        time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥